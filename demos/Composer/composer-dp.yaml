apiVersion: v1
kind: Secret
metadata:
  name: mj-docker
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJkb2NrZXIuaW8iOnsidXNlcm5hbWUiOiJtYWxla2libSIsInBhc3N3b3JkIjoiZGNrcl9wYXRfQzBlbXMybFNIeFJyQnRLS1luRW1KWU91R3cwIiwiYXV0aCI6ImJXRnNaV3RwWW0wNlpHTnJjbDl3WVhSZlF6QmxiWE15YkZOSWVGSnlRblJMUzFsdVJXMUtXVTkxUjNjdyJ9fX0=
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cosharing-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: composer
spec:
  selector:
    matchLabels:
      app: composer-app
  replicas: 1
  template:
    metadata:
      labels:
        app: composer-app
    spec:
      imagePullSecrets:
        - name: mj-docker
      containers:
        - name: cp4accelerator
          image: docker.io/malekibm/composer:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 9080
              protocol: TCP
          resources:
            limits:
              cpu: "1"
            requests:
              cpu: 500m
          env:
            - { name: SPRING_PROFILES_ACTIVE, value: 'kub' }
          volumeMounts:
            - mountPath: /var/composer
              name: cosharing-claim0
      restartPolicy: Always
      volumes:
        - name: cosharing-claim0
          persistentVolumeClaim:
            claimName: cosharing-claim0
---
kind: Service
apiVersion: v1
metadata:
  name: composer-service
spec:
  ports:
    - protocol: TCP
      port: 9080
      targetPort: 9080
  selector:
    app: composer-app